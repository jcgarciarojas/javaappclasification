class=public abstract class ParentClass {\n\
		    protected String parentMethod(){return null;}\n\
		    protected String parentMethod1(){return null;}\n\
			private abstract class TestClass extends ParentClass {	\n\
			    private void method1() {}			\n\
			    protected void method2() {}			\n\
			    public void method3() {}				\n\
			    void method4() {}					\n\
			    protected abstract String method5();\n\
			    protected abstract String method6(String a, String b);\n\
			    protected abstract String method7(String a);\n\
			    abstract String method8();			\n\
		    }									\n\
		    private abstract class ChildClass3 extends TestClass {			\n\
			    protected String parentMethod1(){return null;}\n\
			    protected String method5(){return null;}\n\
			    protected String method6(String a, String b){return null;}\n\
			    protected String method7(){return null;}\n\
		    }									\n\
}
		    
interface=public interface TestClass {		\n\
	public String method1();				\n\
	public String method2();				\n\
	public String method3();				\n\
	public String method4();				\n\
}
